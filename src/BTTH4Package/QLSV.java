/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BTTH4Package;
import java.awt.Dimension;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ADMIN
 */
public class QLSV extends javax.swing.JFrame {

    String mssv;
    public Connection getSQLServerConnection() throws SQLException, ClassNotFoundException {
        
        //Chỉ định nguồn dữ liệu sẽ kết nối, CSDL Microsoft SQL Server
        //Hostname là localhost và port sẽ là 1433
        String URL = "jdbc:sqlserver://localhost:1433;databaseName=QLSV"; 
        String USER = "sa";
        String PASSWORD = "123456";
        
        // load driver và register nó với ứng dụng
        // Để đăng ký gọi phương thức: Class.forName(“driverName”);
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
     private void loadCSLD () throws SQLException, ClassNotFoundException {
        Connection connect = null;
        Statement stmt = null;
         try {           
            connect = getSQLServerConnection();
            stmt = connect.createStatement();
            ResultSet result = stmt.executeQuery("SELECT * FROM SINHVIEN");
            
            loadRsToTable(result);
          
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
            throw ex;
        } finally {
             if (stmt != null && !stmt.isClosed()) {
                 stmt.close();
             }
             if (connect != null && !connect.isClosed()) {
                 connect.close();
             }
         }
    }
     private void loadRsToTable(final ResultSet rs) throws SQLException {
        DefaultTableModel model = (DefaultTableModel) tbDssv.getModel(); //Định nghĩa Model
        model.setRowCount(0);

        while (rs.next()) {    // di chuyển con trỏ chuột tới hàng tiếp theo trên ResultSet.
            //Thêm từng dòng dữ liệu và bảng
            model.addRow(new Object[]{ //Tạo mảng các đối dượng
                rs.getString("MASV"),
                rs.getString("HOTEN"),
                rs.getString("NGSINH"),
                rs.getFloat("DIEMTOAN"),
                rs.getFloat("DIEMLY"),
                rs.getFloat("DIEMHOA"),
                rs.getFloat("DIEMTB")
            });
        }
    }
    public QLSV() {
        initComponents();
        btnThem.setEnabled(false);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
        btnTimKiem.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        notify = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        checkMSSV = new javax.swing.JCheckBox();
        checkTen = new javax.swing.JCheckBox();
        txtMssvFind = new javax.swing.JTextField();
        txtTenFind = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMssv = new javax.swing.JTextField();
        txtTenSinhVien = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtDiemToan = new javax.swing.JTextField();
        txtDiemLy = new javax.swing.JTextField();
        txtDiemHoa = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDssv = new javax.swing.JTable();
        btnMoCSDL = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Tìm Kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        checkMSSV.setText("MSSV");

        checkTen.setText("Tên");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkMSSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMssvFind)
                            .addComponent(txtTenFind, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkMSSV)
                    .addComponent(txtMssvFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkTen)
                    .addComponent(txtTenFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancel))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout notifyLayout = new javax.swing.GroupLayout(notify.getContentPane());
        notify.getContentPane().setLayout(notifyLayout);
        notifyLayout.setHorizontalGroup(
            notifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notifyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        notifyLayout.setVerticalGroup(
            notifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notifyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin sinh viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel1.setText("Mã số sinh viên:");

        jLabel2.setText("Tên sinh viên:");

        jLabel3.setText("Ngày sinh:");

        jLabel4.setText("Điểm Toán:");

        jLabel5.setText("Điểm Lý:");

        jLabel6.setText("Điểm Hoá:");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenSinhVien, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(txtNgaySinh)
                            .addComponent(txtMssv))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThem)
                        .addGap(45, 45, 45)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDiemToan, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(5, 5, 5))
                                    .addComponent(btnXoa))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDiemHoa, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addComponent(btnSua))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDiemLy, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtMssv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiemToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiemLy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiemHoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Sinh Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        tbDssv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MSSV", "Tên Sinh Viên", "Ngày Sinh", "Toán", "Lý", "Hoá", "ĐTB"
            }
        ));
        tbDssv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDssvMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDssv);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        btnMoCSDL.setText("Mở CSDL");
        btnMoCSDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoCSDLActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jButton6.setText("Thoát");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMoCSDL)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMoCSDL)
                    .addComponent(btnTimKiem)
                    .addComponent(jButton6))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMoCSDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoCSDLActionPerformed
        try {
            loadCSLD();
            
            btnSua.setEnabled(true);
            btnXoa.setEnabled(true);
            btnThem.setEnabled(true);
            btnTimKiem.setEnabled(true);
            
            txtMssv.setEnabled(true);
            txtDiemLy.setEnabled(true);
            txtDiemToan.setEnabled(true);
            txtDiemHoa.setEnabled(true);
            txtTenSinhVien.setEnabled(true);
            txtNgaySinh.setEnabled(true);
            
            JOptionPane.showMessageDialog(null, "Mở dữ liệu trong CSDL thành công!");
        } catch (SQLException |ClassNotFoundException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMoCSDLActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
         Connection conn = null;
        PreparedStatement stmt = null;
        
        if(txtMssv.getText().equals("") 
        || txtTenSinhVien.getText().equals("")
        || txtNgaySinh.getText().equals("") 
        || txtDiemToan.getText().equals("") 
        || txtDiemLy.getText().equals("")
        || txtDiemHoa.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng không bỏ trống các ô thông tin!","inane warning", JOptionPane.WARNING_MESSAGE);
        }        
        else{
            try {
                String mssv = txtMssv.getText();
                String ten = txtTenSinhVien.getText();
                String ngaysinh = txtNgaySinh.getText();
                float diemtoan = Float.parseFloat(txtDiemToan.getText());
                float diemly = Float.parseFloat(txtDiemLy.getText());
                float diemhoa = Float.parseFloat(txtDiemHoa.getText());
                
                conn = this.getSQLServerConnection();
                String sql = "SELECT * FROM SINHVIEN WHERE MASV = ?";
                stmt = conn.prepareStatement(sql);
                stmt.setString(1, mssv);
                
                ResultSet rs = stmt.executeQuery();
                
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Sinh viên có mssv: " + mssv +" đã tồn tại!","inane warning", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (ngaysinh.matches("[0-9]{1,2}/[0-9]{1,2}/[1-9]{1}[0-9]{3}")) {
                        String sqlInsert = "INSERT INTO SINHVIEN (MASV,HOTEN,NGSINH ,DIEMTOAN ,DIEMLY ,DIEMHOA ,DIEMTB) "
                                + "VALUES (?, ?, ?, ?, ?, ?, ?)";
                        stmt = conn.prepareStatement(sqlInsert);
                        
                        stmt.setString(1, mssv);
                        stmt.setString(2, ten);
                        stmt.setString(3, ngaysinh);
                        stmt.setFloat(4, diemtoan);
                        stmt.setFloat(5, diemly);
                        stmt.setFloat(6, diemhoa);
                        stmt.setFloat(7, (diemhoa + diemtoan + diemly) / 3);                       
                        stmt.execute();
                        conn.close();
                        stmt.close();
                        
                        loadCSLD();   
                        JOptionPane.showMessageDialog(null, "Thêm sinh viên " + mssv + " thành công!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Ngày không đúng định dạng, xin vui lòng nhập lại!","inane warning", JOptionPane.WARNING_MESSAGE); 
                    }
                }                
                
            } catch (Exception ex) {
                Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Sai định dạng dữ liệu!","inane warning", JOptionPane.WARNING_MESSAGE);
            } finally {
                try {
                    if ( stmt != null && !stmt.isClosed())
                        stmt.close();
                    if (conn != null && !conn.isClosed())
                        conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                }                
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        Connection conn = null;
        PreparedStatement stmt = null;
        if(txtMssv.getText().equals("") 
        || txtTenSinhVien.getText().equals("")
        || txtNgaySinh.getText().equals("") 
        || txtDiemToan.getText().equals("") 
        || txtDiemLy.getText().equals("")
        || txtDiemHoa.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng không bỏ trống các ô thông tin!","inane warning", JOptionPane.WARNING_MESSAGE);
        }        
        else {
            String sql = "delete from SINHVIEN where MASV= ? ";
            PreparedStatement a = null;
            if(JOptionPane.showConfirmDialog(this,"Bạn có chắc chắc muốn Xoá!" , "XOÁ", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                try {
                    conn = this.getSQLServerConnection();
                    a = conn.prepareStatement(sql);
                    a.setString(1, txtMssv.getText());
                    a.executeUpdate();
                    a.close();
                    loadCSLD();
                } catch (SQLException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    if ( stmt != null && !stmt.isClosed())
                        stmt.close();
                    if (conn != null && !conn.isClosed())
                        conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbDssvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDssvMouseClicked
        int selectedRow = tbDssv.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tbDssv.getModel();
        this.mssv = model.getValueAt(selectedRow, 0).toString();
        txtMssv.setText(model.getValueAt(selectedRow, 0).toString());
        txtTenSinhVien.setText(model.getValueAt(selectedRow, 1).toString());
        txtNgaySinh.setText(model.getValueAt(selectedRow, 2).toString());
        txtDiemToan.setText(model.getValueAt(selectedRow, 3).toString());
        txtDiemLy.setText(model.getValueAt(selectedRow, 4).toString());
        txtDiemHoa.setText(model.getValueAt(selectedRow, 5).toString());
    }//GEN-LAST:event_tbDssvMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        Connection conn = null;
        PreparedStatement stmt = null;
        
        if(txtMssv.getText().equals("") 
        || txtTenSinhVien.getText().equals("")
        || txtNgaySinh.getText().equals("") 
        || txtDiemToan.getText().equals("") 
        || txtDiemLy.getText().equals("")
        || txtDiemHoa.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng không bỏ trống các ô thông tin!","inane warning", JOptionPane.WARNING_MESSAGE);
        }        
        else{
            try {
                String mssv = txtMssv.getText();
                String ten = txtTenSinhVien.getText();
                String ngaysinh = txtNgaySinh.getText();
                float diemtoan = Float.parseFloat(txtDiemToan.getText());
                float diemly = Float.parseFloat(txtDiemLy.getText());
                float diemhoa = Float.parseFloat(txtDiemHoa.getText());
                
                conn = this.getSQLServerConnection();
                if (ngaysinh.matches("[0-9]{1,2}/[0-9]{1,2}/[1-9]{1}[0-9]{3}")) {
                    String sqlEdit = "update SINHVIEN set MASV = ?,HOTEN = ?,NGSINH = ?,DIEMTOAN = ?,DIEMLY = ? ,DIEMHOA= ? ,DIEMTB = ? where MASV = ? ";
                    stmt = conn.prepareStatement(sqlEdit);

                    stmt.setString(1, mssv);
                    stmt.setString(2, ten);
                    stmt.setString(3, ngaysinh);
                    stmt.setFloat(4, diemtoan);
                    stmt.setFloat(5, diemly);
                    stmt.setFloat(6, diemhoa);
                    stmt.setFloat(7, (diemhoa + diemtoan + diemly) / 3); 
                    stmt.setString(8, this.mssv);
                    stmt.execute();
                    conn.close();
                    stmt.close();
                    loadCSLD();   
                    JOptionPane.showMessageDialog(null, "Sửa sinh viên " + mssv + " thành công!");
                } else {
                    JOptionPane.showMessageDialog(null, "Ngày không đúng định dạng, xin vui lòng nhập lại!","inane warning", JOptionPane.WARNING_MESSAGE); 
                }   
                
            } catch (Exception ex) {
                Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Sai định dạng dữ liệu!","inane warning", JOptionPane.WARNING_MESSAGE);
            } finally {
                try {
                    if ( stmt != null && !stmt.isClosed())
                        stmt.close();
                    if (conn != null && !conn.isClosed())
                        conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                }                
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        notify.setSize(500, 500);
        notify.setVisible(true);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
            try { 
                if(checkMSSV.isSelected() && checkTen.isSelected()){
                    conn = this.getSQLServerConnection();
                    String sql = "SELECT * FROM SINHVIEN WHERE MASV = '" + txtMssvFind.getText() + "' and HOTEN = N'"+ txtTenFind.getText() + "'";
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(sql);
                    loadRsToTable(rs);
                    return;
                } else if(checkMSSV.isSelected()) {
                    conn = this.getSQLServerConnection();
                    String sql = "SELECT * FROM SINHVIEN WHERE MASV = '" + txtMssvFind.getText() +"'";
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(sql);
                    loadRsToTable(rs);
                    return;
                } else if (checkTen.isSelected()){
                    conn = this.getSQLServerConnection();
                    String sql = "SELECT * FROM SINHVIEN WHERE HOTEN = N'" + txtTenFind.getText() + "'";
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(sql);
                    loadRsToTable(rs);
                    return;
                }
            }catch (Exception ex) {
                Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Sai định dạng dữ liệu!","inane warning", JOptionPane.WARNING_MESSAGE);
            } finally {
                try {
                    if ( stmt != null && !stmt.isClosed())
                        stmt.close();
                    if (conn != null && !conn.isClosed())
                        conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                }                
            }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        notify.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                QLSV a = new QLSV();
                a.setVisible(true);
                a.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnMoCSDL;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JCheckBox checkMSSV;
    private javax.swing.JCheckBox checkTen;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog notify;
    private javax.swing.JTable tbDssv;
    private javax.swing.JTextField txtDiemHoa;
    private javax.swing.JTextField txtDiemLy;
    private javax.swing.JTextField txtDiemToan;
    private javax.swing.JTextField txtMssv;
    private javax.swing.JTextField txtMssvFind;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtTenFind;
    private javax.swing.JTextField txtTenSinhVien;
    // End of variables declaration//GEN-END:variables
}
